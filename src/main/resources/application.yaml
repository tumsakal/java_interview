server:
  port: ${SERVER_PORT:8094}
  servlet:
    context-path: ${SERVER_CONTEXT_PATH:}
  shutdown: graceful

  cloud:
    consul:
      host: ${DISCOVERY_HOST:localhost}
      port: ${DISCOVERY_PORT:8500}
      discovery:
        instance-id: ${spring.application.name}-${random.int}
        prefer-ip-address: true
        scheme: http
        deregister: true
        health-check-path: ${server.servlet.context-path}/actuator/health
        # Optional and useful for running in the Docker to set the IP of the host
        ip-address: ${DISCOVERY_INSTANCE_HOSTNAME}
    #        service-name: ${spring.application.name}
    #        instance-group: ${spring.application.name}

  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:db_test}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
  jpa:
    hibernate:
      ddl-auto: ${DB_SCHEMA_UPDATE:update}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          time_zone: UTC

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: openid,profile,email
      resourceserver:
        jwt:
          issuer-uri: https://accounts.google.com
          jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs

